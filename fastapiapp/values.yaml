# Exam Helm Values configuration
applications:
# POSTGRES MOVIES
  - name: postgresm
    kind: Deployment
    containerPort: 5432
    image:
      repository: postgres
      tag: 12.0-alpine
      pullPolicy: IfNotPresent
    envFrom:
      - secretRef:
          name: exam-fastapiapp-postgresm-secret
    volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: postgresm-volume-data
    volumes:
      - name: postgresm-volume-data
        persistentVolumeClaim:
          claimName: exam-fastapiapp-postgresm-pvc
    services:
      - type: ClusterIP
        ports:
          - port: 5432
            name: postgresm
    secret:
      type: Opaque
      data:
        POSTGRES_DB: bW92aWVfZGJfZGV2
        POSTGRES_HOST_AUTH_METHOD: dHJ1c3Q=
        POSTGRES_PASSWORD: bW92aWVfZGJfcGFzc3dvcmQ=
        POSTGRES_USER: bW92aWVfZGJfdXNlcm5hbWU=
    persistentVolume:
      storageClassName: local-path
      capacity: 1Gi
      accessModes:
        - ReadWriteMany
      hostPath: /data/postgresql
    persistentVolumeClaim:
      storageClassName: local-path
      capacity: 1Gi
      accessModes:
        - ReadWriteMany

#  POSTGRE CASTS
  - name: postgresc
    kind: Deployment
    containerPort: 5432
    image:
      repository: postgres
      tag: 12.0-alpine
      pullPolicy: IfNotPresent
    envFrom:
      - secretRef:
          name: exam-fastapiapp-postgresc-secret
    volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: postgresc-volume-data
    volumes:
      - name: postgresc-volume-data
        persistentVolumeClaim:
          claimName: exam-fastapiapp-postgresc-pvc
    services:
      - type: ClusterIP
        ports:
          - port: 5432
            name: postgresc
    secret:
      type: Opaque
      data:
        POSTGRES_DB: Y2FzdF9kYl9kZXY=
        POSTGRES_HOST_AUTH_METHOD: dHJ1c3Q=
        POSTGRES_PASSWORD: Y2FzdF9kYl9wYXNzd29yZA==
        POSTGRES_USER: Y2FzdF9kYl91c2VybmFtZQ==
    persistentVolume:
      storageClassName: local-path
      capacity: 1Gi
      accessModes:
        - ReadWriteMany
      hostPath: /data/postgresql
    persistentVolumeClaim:
      storageClassName: local-path
      capacity: 1Gi
      accessModes:
        - ReadWriteMany

# MOVIES DEPLOY
  - name: movies
    kind: Deployment
    containerPort: 8000
    command: "uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
    initContainers:
      - name: wait-for-db
        image: busybox
        command: [ 'sh', '-c', 'until nc -z -v -w30 exam-fastapiapp-postgresm-service 5432; do echo "Waiting for database connection..."; sleep 5; done;' ]
    image:
      repository: ramineifar/movie-service
      tag: latest
      pullPolicy: IfNotPresent
    services:
      - ports:
          - port: 8001
            targetPort: 8000
            name: movies
        allocateLoadBalancerNodePorts: false
    envFrom:
      - secretRef:
          name: exam-fastapiapp-movies-secret
    secret:
      type: Opaque
      data:
        DATABASE_URI: cG9zdGdyZXNxbDovL21vdmllX2RiX3VzZXJuYW1lOm1vdmllX2RiX3Bhc3N3b3JkQGV4YW0tZmFzdGFwaWFwcC1wb3N0Z3Jlc20tc2VydmljZTo1NDMyL21vdmllX2RiX2Rldg==
        CAST_SERVICE_HOST_URL: aHR0cDovL2V4YW0tZmFzdGFwaWFwcC1jYXN0cy1zZXJ2aWNlOjgwMDIvYXBpL3YxL2Nhc3RzLw==

  - name: casts
    kind: Deployment
    containerPort: 8000
    command: "uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
    initContainers:
      - name: wait-for-db
        image: busybox
        command: [ 'sh', '-c', 'until nc -z -v -w30 exam-fastapiapp-postgresc-service 5432; do echo "Waiting for database connection..."; sleep 5; done;' ]
    image:
      repository: ramineifar/cast-service
      tag: latest
      pullPolicy: IfNotPresent
    envFrom:
      - secretRef:
          name: exam-fastapiapp-casts-secret
    secret:
      type: Opaque
      data:
        DATABASE_URI: cG9zdGdyZXNxbDovL21vdmllX2RiX3VzZXJuYW1lOm1vdmllX2RiX3Bhc3N3b3JkQGV4YW0tZmFzdGFwaWFwcC1wb3N0Z3Jlc20tc2VydmljZTo1NDMyL21vdmllX2RiX2Rldg==
    services:
      - ports:
          - port: 8002
            targetPort: 8000

  - name: nginx
    kind: Deployment
    containerPort: 8081
    services:
      - ports:
          - port: 8081
            targetPort: 8081
        allocateLoadBalancerNodePorts: false
        type: LoadBalancer
    image:
      repository: nginx
      tag: latest
      pullPolicy: IfNotPresent
    configmap:
      data:
        nginx_config.conf: "server {
          listen 8081;
          location /api/v1/movies {
            proxy_pass http://exam-fastapiapp-movies-service:8001/api/v1/movies;
          }
          location /api/v1/casts {
            proxy_pass http://exam-fastapiapp-casts-service:8002/api/v1/casts;
          }
        }"
    volumeMounts:
      - name: nginx-conf-volume
        mountPath: /etc/nginx/conf.d/
    volumes:
      - name: nginx-conf-volume
        configMap:
          name: exam-fastapiapp-nginx-configmap
          items:
            - key: nginx_config.conf
              path: default.conf

service:
  type: LoadBalancer